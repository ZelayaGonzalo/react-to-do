{"version":3,"sources":["images/icon-moon.svg","images/icon-sun.svg","Components/BottomList.js","Components/View.js","Components/List.js","App.js","index.js"],"names":["BottomList","props","className","tasks","length","lightmode","id","onClick","changeShow","clearCompleted","View","Task","value","task","type","onChange","handleCheck","checked","completed","removeTask","htmlFor","maxHeight","transitions","useTransition","d","from","height","opacity","leave","enter","transitionsActive","filter","transitionsCompleted","currentHeight","window","innerHeight","getActive","show","innerWidth","reset","droppableId","provided","ref","innerRef","droppableProps","map","index","item","key","div","style","draggableId","draggableProps","dragHandleProps","placeholder","List","src","iconMoon","iconSun","alt","changeMode","onSubmit","addTask","searchValue","handleSearch","onDragEnd","result","destination","source","newArray","arrayMove","console","log","setTasks","event","target","setShow","createTask","App","useState","setSearchValue","setLightmode","toogleRepeated","setToogleRepeated","useEffect","preventDefault","newTask","firstChild","prev","some","setTimeout","stopPropagation","nextSibling","innerHTML","findIndex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82928cef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/icon-moon.6c03114b.svg\";","export default __webpack_public_path__ + \"static/media/icon-sun.910b1f9a.svg\";","\nfunction BottomList(props){\n    return(\n        <div className=\"bottom-list\">\n                    <div className=\"bottom-items\">\n                        <div className=\"items-left\">{props.tasks.length} items left</div>\n                        <ul className={props.lightmode ? \"item-status item-status-light\":\"item-status\"}>\n                            <li id=\"all\" onClick={props.changeShow}>All</li>\n                            <li id=\"active\" onClick={props.changeShow}>Active</li>\n                            <li id=\"completed\" onClick={props.changeShow}>Completed</li>\n                        </ul>\n                        <div className={props.lightmode ? \"item-clear item-clear-light\" :\"item-clear\"} onClick={props.clearCompleted} >Clear Completed</div>\n                    </div>\n                </div>  \n    )\n}\n\nexport default BottomList","import React from 'react'\nimport BottomList from './BottomList'\nimport { Droppable,Draggable } from 'react-beautiful-dnd'\nimport { useTransition , animated } from 'react-spring'\n\n\nfunction View(props){\n\n    function Task(value){\n        return(\n        <li className={props.lightmode ? \"task helper task-light\":\"task helper\"}>\n            <input key={value.task} id={value.task} className=\"task-check\" type=\"checkbox\" onChange={props.handleCheck} checked={value.completed} />\n            <span className=\"custom-check\"></span>\n            <span className=\"delete-task\" onClick={props.removeTask}></span>\n            <label htmlFor={value.task}>{value.task}</label>\n        </li>\n        )\n    }    \n    const transitions = useTransition(props.tasks,\n    d=>d.task,\n    {\n        from: { height: 0, opacity: 0 },\n        leave: { height: 0, opacity: 0 },\n        enter: {height:60,opacity:1},\n    }\n    )\n    const transitionsActive = useTransition(props.tasks.filter(task=>task.completed === false),\n        d=>d.task,\n        {\n            from: { height: 0, opacity: 0 },\n            leave: { height: 0, opacity: 0 },\n            enter: {height:60,opacity:1},\n        }\n        )\n\n    const transitionsCompleted =useTransition(props.tasks.filter(task=>task.completed === true),\n    d=>d.task,\n    {\n        from: { height: 0, opacity: 0 },\n        leave: { height: 0, opacity: 0 },\n        enter: {height:60,opacity:1},\n    }\n    )\n\n    const currentHeight =  window.innerHeight\n    const currentWidth =window.innerWidth\n    let maxHeight\n    if(currentWidth > 600){\n        maxHeight = currentHeight*50/100\n    }\n    else{\n        maxHeight = currentHeight*60/100\n    }\n\n    const statusTransition =useTransition(props.show,props.show,{\n        from:{maxHeight:0,height:0},\n        leave:{maxHeight:0,height:0,opacity:0},\n        enter:{maxHeight:maxHeight,height:'auto',opacity:1},\n        reset:true,\n    })\n\n    function getActive(){\n        switch(props.show){\n            case \"all\": return transitions\n            case \"active\": return transitionsActive\n            case \"completed\": return transitionsCompleted\n            default: return transitions\n        }\n    }\n    //if(props.show === \"all\"){\n        return(\n            <div className={props.lightmode ? \"task-list-container task-list-container-light\" : \"task-list-container\"}>\n                <Droppable droppableId=\"one\">\n                    {(provided)=>(\n                    <div className={props.lightmode ? \"task-list task-list-light\" : \"task-list\"}\n                    ref={provided.innerRef}\n                    {...provided.droppableProps}\n                    >\n                        {getActive().map(({item,props,key},index)=>\n                        <animated.div key={key} style={props}>\n                            <Draggable draggableId={item.task} index={index}>\n                                {(provided)=><div\n                                    {...provided.draggableProps}\n                                    {...provided.dragHandleProps}\n                                    ref={provided.innerRef}\n                                >{Task(item)}\n                                </div>}\n                            </Draggable>\n                        </animated.div> \n                        )}\n                        {provided.placeholder}\n                    </div>)}\n                </Droppable>\n                <BottomList\n                    tasks={props.tasks}\n                    changeShow={props.changeShow}\n                    lightmode={props.lightmode}\n                    clearCompleted={props.clearCompleted}\n                  /> \n            </div>\n            )\n}\n\nexport default View","import React from 'react'\nimport './list.css'\nimport './list-light.css'\nimport './mobile.css'\nimport iconMoon from '../images/icon-moon.svg'\nimport iconSun from '../images/icon-sun.svg'\nimport View from './View'\nimport { DragDropContext } from 'react-beautiful-dnd'\nimport arrayMove from'array-move'\n\n\nfunction List(props){\n    \n    function changeShow(event){\n        const id =event.target.id\n        props.setShow(id)\n    }\n    function onDragEnd(result){\n        const {destination,source,draggableId} =result\n        if(!destination){\n            return\n        }\n        if(destination.droppableId === source.droppableId && destination.index === source.index){\n            return\n        }\n        const newTask ={\n            task: props.tasks[source.index].task,\n            completed: props.tasks[source.index].completed\n        }\n        const newArray = arrayMove(props.tasks,source.index,destination.index)\n        console.log(newArray)\n        props.setTasks(newArray)\n\n    }\n\n    return(\n        <div className={props.lightmode ? \"list-container list-container-light\" : \"list-container\"}>\n            <div className=\"list-title\">\n                <h1>TODO</h1>\n                <img className=\"theme-icon\" src={props.lightmode? iconMoon:iconSun} alt=\"icon\" onClick={props.changeMode}/>\n            </div>\n            <form className={props.lightmode ? \"search-bar search-bar-light\" : \"search-bar\"} onSubmit={props.addTask}>\n                <input id=\"search\" value={props.searchValue} onChange={props.handleSearch} className=\"search-bar-input\" type=\"text\" placeholder=\"Create a new task\"/>\n                <span></span>\n                <button type=\"submit\" className=\"b-hide\"></button>\n            </form>\n            <DragDropContext\n            onDragEnd={onDragEnd}\n            >\n                <View \n                show={props.show}\n                tasks={props.tasks} \n                setTasks={props.setTasks} \n                removeTask={props.removeTask} \n                lightmode={props.lightmode}\n                changeShow={changeShow}\n                clearCompleted={props.clearCompleted}\n                handleCheck={props.handleCheck}\n            />\n            </DragDropContext>\n            <p className=\"drag-message\"> Drag and drop to reorder</p>\n               \n        </div>\n        \n    )\n}\n\n\nexport default List","import './App.css'\nimport {useState, useEffect} from 'react'\nimport List from './Components/List'\n\n\nfunction createTask(task) {\n  return{\n    task,\n    completed:false,\n  }\n}\n\nfunction App() {\n  const [tasks,setTasks] = useState([])\n  const [searchValue,setSearchValue] = useState(\"\")\n  const [show,setShow] = useState(\"all\")\n  const [lightmode,setLightmode] = useState(false)\n  const [toogleRepeated,setToogleRepeated] = useState(false)\n\n  useEffect(()=>{\n    setTasks(()=>{return [createTask(\"task1\"),createTask(\"task2\"),createTask(\"task3\"),createTask(\"task4\")]})\n  },[])\n\n  function handleSearch(event){\n    const value = event.target.value\n    setSearchValue(value)\n  }\n  function addTask(event){\n    event.preventDefault()\n    const value = event.target.firstChild.value\n    const newTask = createTask(value)\n    setTasks((prev)=>{\n      if(!prev.some(item => item.task === newTask.task)){\n        return [...prev, newTask]\n      }\n      else{\n        showRepeated()\n        return prev\n      } \n    })\n    setSearchValue('')\n  }\n  function removeTask(event){\n    event.preventDefault()\n    event.stopPropagation();\n    const target = event.target.nextSibling.innerHTML\n    console.log(target)\n    setTasks(prev=> prev.filter(item => item.task !== target))\n  }\n\n  function changeMode(event) {\n    event.preventDefault()\n    setLightmode(!lightmode)\n  }\n\n  function handleCheck(event){\n    const target = event.target.id \n    setTasks(prev=>{\n      const newArray = [...prev]\n      const index = newArray.findIndex(tasks=>tasks.task === target)\n      newArray[index] = {\n        task:target,\n        completed:!newArray[index].completed\n      }\n      return newArray\n    })\n  }\n  function clearCompleted(event){\n    setTasks(prev=>prev.filter(item =>item.completed === false))\n  }\n\n  function showRepeated(){\n    setToogleRepeated(true)\n    setTimeout(()=>setToogleRepeated(false),2000)\n}\n\n  return (\n    <div className={lightmode ? \"App app-light\":\"App\"}>\n      <div className={toogleRepeated ? \"task-repeat\":\"task-repeat hidden\"}>Task already Exists</div>\n      <div className={lightmode ? \"top top-light\":\"top\"} ></div>\n      <List \n      tasks={tasks} \n      setTasks={setTasks} \n      handleSearch={handleSearch}\n      searchValue={searchValue}\n      addTask={addTask}\n      removeTask={removeTask}\n      show={show}\n      setShow={setShow}\n      clearCompleted={clearCompleted}\n      lightmode={lightmode}\n      changeMode={changeMode}\n      handleCheck={handleCheck}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}